name: deploy-backend
on:
  workflow_dispatch: 
  push:
    paths:
      - "server/**"
    branches:
      - master
jobs:
  deploy-to-ecr:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::732313143489:role/leavemanager-github-actions
          aws-region: ap-south-1  
      - name: Create Env files
        run: |
          touch .env
          echo ENV=production >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_DIALECT=${{ secrets.DB_DIALECT }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: leavemanager-server
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Webhook to ec2
        run: | 
          curl --header "secret: ${{ secrets.HOOK_SECRET }}" --header "hash: ${{ github.sha }}"  http://api.leavemanager.co.in:9000/hooks/redeploy-webhook



